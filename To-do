-- bug where project name is shrinking to 1 word. also when i update room it shouldn't say name isn't unique if the name isnt' changed

- refactor validations using Active Record Validations

    # if project_names.include?(params[:name]) == true && @project.name != params[:name]
    #   @error = "Looks like you already have a project with that name. Pick another name."
    #   erb :'projects/edit' #re-render form to show typed-in values. Flash messages don't seem to work with render.
    # elsif params[:new_room] == "" && params[:room] == nil
    #   @error = "Please add or choose a room."
    #   erb :'projects/edit' #re-render form to show typed-in values. Flash messages don't seem to work with render.
    # elsif ((params[:cost].scan(/[0-9]/).size == params[:cost].length) == false) && params[:cost] != ""
    #   @error = "Please enter only number 0-9 for cost."
    #   erb :'projects/edit' #re-render form to show typed-in values. Flash messages don't seem to work with render.
    # elsif ((params[:duration].scan(/[0-9]/).size == params[:duration].length) == false) && params[:cost] != ""
    #   @error = "Please enter only number 0-9 for duration."
    #   erb :'projects/edit' #re-render form to show typed-in values. Flash messages don't seem to work with render.
    # elsif (params[:name].scan(/[\d\sa-zA-Z]/).size == params[:name].length) == false
    #   @error = "Please enter only numbers (0-9) and letters (a-z) in your project name."
    #   erb :'projects/edit' #re-render form to show typed-in values. Flash messages don't seem to work with render.
    # elsif ((params[:new_room].scan(/[\d\sa-zA-Z]/).size == params[:new_room].length) == false) && params[:new_room] !=""
    #   @error = "Please enter only numbers (0-9) and letters (a-z) in your room name."
    #   erb :'projects/edit' #re-render form to show typed-in values. Flash messages don't seem to work with render.
    # else
    #   @project = User.find_by_slug(params[:user_slug]).projects.find_by_slug(params[:project_slug])
    #   (!!params[:new_room] && params[:new_room] != "") ? room_name = params[:new_room] : room_name = params[:room] 
    #   room = @project.user.rooms.find_or_create_by(name: room_name.downcase, user: current_user)
    #   @project.room.destroy if @project.room.projects.size == 1 && @project.room.name != room_name
    #   @project.update(name: params[:name].downcase, description: params[:description], materials: params[:materials], room: room, status: params[:status], cost: params[:cost], duration: params[:duration])
    #   @project.save
  
    #   redirect "/users/#{@project.user.slug}/projects/#{@project.slug}" 
    # end

  - when editing, it may be dangerous to destroy original room before project update is validated
  - /projects and /projects/new should be nested
  - name needs to onluy be unique for the user
- refactor views
- refactor controllers - use memoization where possible
- write tests

Questions
- nested paths -- what's the best convention?
  - if you need to do crud within the nested urls, do that
- where should signup / login controller actions go?

- i have a gazillion validations - is this right? Should they live in the controller, or model methods is_valid_name?
- modules exist in concerns folder?

- active record validations -- check this out to replace if statements
Acive Record Validations -- googls

- can't get check logic to work
- why can't i use flash with render


sinatra is a light weight rake-based web app framework
rack is a ruby gem that lets you build http requests usng ruby